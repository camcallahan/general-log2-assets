-- This file has been generated by Dungeon Editor 2.1.18

-- import standard assets
import "assets/scripts/standard_assets.lua"

-- import custom assets
--import "mod_assets/scripts/items.lua"
import "mod_assets/scripts/monsters.lua"
import "mod_assets/scripts/objects.lua"
import "mod_assets/scripts/tiles.lua"
import "mod_assets/scripts/recipes.lua"
import "mod_assets/scripts/spells.lua"
import "mod_assets/scripts/materials.lua"
import "mod_assets/scripts/sounds.lua"

-- Cameron Callahan's Ascended Items Pack
import "mod_assets/scripts/ascension_items.lua"

--[[
Ascension Items Pack
by Cameron Callahan @camcallahan

Party Object definition that scans items in the inventory
for a specifically named Script class depending on the 
trigger hook and runs the performAction function contained
inside the items in the inventory. This lets you have fairly
self-contained items that can do things easily based off
of hooks that Items don't have built in without having a 
giant, messy set of 'if item' checks in the party.
--]]

defineObject{
   name = "party",
   baseObject = "party",
   components = {
      {
         class = "Party",  
         onPickUpItem =
            function(party, item)         
				if not string.find(item.go.name, "socket_") then
					item.go.item:setFitContainer(false)
				end
			end,
		onCast = function(self, champion, spell)
		-- Auto Check For Item Specific Triggers below	
			for i = 1, 10 do
				local checkItem = champion:getItem(i)
				if checkItem ~= nil then
					if checkItem.go:getComponent("triggerOnCast") then
					checkItem.go.triggerOnCast.performAction( champion, spell)
					end
				end
			end
		-- General Triggers Below (Skill/Trait triggers, etc)
			
			
			if setFalse then return false end
			return self, champion, spell
		end,
		onDamage = function(self, champion, damage, damageType)
		local setFalse = false
		-- Auto Check For Item Specific Triggers below	
			for i = 1, 10 do
				local checkItem = champion:getItem(i)
				if checkItem ~= nil then
					if checkItem.go:getComponent("triggerOnDamage") then
					checkItem.go.triggerOnDamage.performAction(self, champion, damage, damageType)
					end
				end
			end
		-- General Triggers Below (Skill/Trait triggers, etc)	
			if champion:hasTrait("energyshield") then
				if damage > 100 then
					local chanceToShatter = 7
					if math.random(1, 100) < chanceToShatter then
						hudPrint("The Energy Shield protecting ".. champion:getName() .. " shatters!")
						champion:removeTrait("energyshield")
						
						champion:damage(damage, damageType)
					end
				end
				local currentEnergy = champion:getEnergy()
				champion:setEnergy(currentEnergy - damage)
				if champion:getEnergy() < 0 then
					champion:removeTrait("energyshield")
					champion:setEnergy(0)
				end
				setFalse = true
			end
			
			
			if setFalse then return false end
			return self, champion, damage, damageType
		end,
		onDie = function(self, champion)
		-- Auto Check For Item Specific Triggers below	
			for i = 1, 10 do
				local checkItem = champion:getItem(i)
				if checkItem ~= nil then
					if checkItem.go:getComponent("triggerOnDie") then
					checkItem.go.triggerOnDie.performAction(self, champion)
					end
				end
			end
		-- General Triggers Below (Skill/Trait triggers, etc)	
			
			if setFalse then return false end
			return self, damage
		end,
		onAttack = function(self, champion, action, slot)
		-- Auto Check For Item Specific Triggers below	
			for i = 1, 10 do
				local checkItem = champion:getItem(i)
				if checkItem ~= nil then
					if checkItem.go:getComponent("triggerOnAttack") then
					checkItem.go.triggerOnAttack.performAction(self, champion, action, slot)
					end
				end
			end
		-- General Triggers Below (Skill/Trait triggers, etc)	
			
			if setFalse then return false end
			return self, champion, action, slot
		end,
		onLevelUp = function(self, champion)
		-- Auto Check For Item Specific Triggers below	
			for i = 1, 10 do
				local checkItem = champion:getItem(i)
				if checkItem ~= nil then
					if checkItem.go:getComponent("triggerOnLevelUp") then
					checkItem.go.triggerOnLevelUp.performAction(self, champion)
					end
				end
			end
		-- General Triggers Below (Skill/Trait triggers, etc)
			
			
			if setFalse then return false end
			return self, champion
		end,
		onReceiveCondition = function(self, champion, condition)
		-- Auto Check For Item Specific Triggers below	
			for i = 1, 10 do
				local checkItem = champion:getItem(i)
				if checkItem ~= nil then
					if checkItem.go:getComponent("triggerOnReceiveCondition") then
					checkItem.go.triggerOnReceiveCondition.performAction(self, champion, condition)
					end
				end
			end
		-- General Triggers Below (Skill/Trait triggers, etc)
			
			if setFalse then return false end
			return self, champion, condition
		end,
		onPickUpItem = function(self, item)
		-- Auto Check For Item Specific Triggers below	
			for j = 1, 4 do
			for i = 1, 10 do
				local checkItem = party.party:getChampion(j):getItem(i)
				if checkItem ~= nil then
					if checkItem.go:getComponent("triggerOnPickUpItem") then
					checkItem.go.triggerOnPickUpItem.performAction(self, item)
					end
				end
			end
			end
		-- General Triggers Below (Skill/Trait triggers, etc)
		
		
		
			if setFalse then return false end
			return self, item
		end,
		onProjectileHit = function(self, champion, item, damage)
		-- Auto Check For Item Specific Triggers below	
			for i = 1, 10 do
				local checkItem = champion:getItem(i)
				if checkItem ~= nil then
					if checkItem.go:getComponent("triggerOnProjectileHit") then
					checkItem.go.triggerOnProjectileHit.performAction(self, champion, item, damage)
					end
				end
			end
		-- General Triggers Below (Skill/Trait triggers, etc)
		
		
			if setFalse then return false end
			return self, item
		end,
		onRest = function(self)
		-- Auto Check For Item Specific Triggers below	
			for j = 1, 4 do
			for i = 1, 10 do
				local checkItem = party.party:getChampion(j):getItem(i)
				if checkItem ~= nil then
					if checkItem.go:getComponent("triggerOnRest") then
					checkItem.go.triggerOnRest.performAction(self)
					end
				end
			end
			end
		-- General Triggers Below (Skill/Trait triggers, etc)
		
		
			if setFalse then return false end
			return self
		end,
		onWakeUp = function(self)
		-- Auto Check For Item Specific Triggers below	
			for j = 1, 4 do
			for i = 1, 10 do
				local checkItem = party.party:getChampion(j):getItem(i)
				if checkItem ~= nil then
					if checkItem.go:getComponent("triggerOnWakeUp") then
					checkItem.go.triggerOnWakeUp.performAction(self)
					end
				end
			end
			end
		-- General Triggers Below (Skill/Trait triggers, etc)
		
		
			if setFalse then return false end
			return self
		end,
		onTurn = function(self, direction)
		-- Auto Check For Item Specific Triggers below	
			for j = 1, 4 do
			for i = 1, 10 do
				local checkItem = party.party:getChampion(j):getItem(i)
				if checkItem ~= nil then
					if checkItem.go:getComponent("triggerOnTurn") then
					checkItem.go.triggerOnTurn.performAction(self, direction)
					end
				end
			end
			end
		-- General Triggers Below (Skill/Trait triggers, etc)
		
		
			if setFalse then return false end
			return self, direction
		end,
		onMove = function(self, direction)
		-- Auto Check For Item Specific Triggers below	
			for j = 1, 4 do
			for i = 1, 10 do
				local checkItem = party.party:getChampion(j):getItem(i)
				if checkItem ~= nil then
					if checkItem.go:getComponent("triggerOnMove") then
					checkItem.go.triggerOnMove.performAction(self, direction)
					end
				end
			end
			end
		-- General Triggers Below (Skill/Trait triggers, etc)
		
			if setFalse then return false end
			return self, direction
		end,
		},
		{
			class = "Counter",
			name = "luck",
			value = 0,
		},
   },
}

